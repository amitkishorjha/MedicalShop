@model WMS.WebUI.Models.OrderExit
@{
    ViewBag.Title = "OrderExit";
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="#">Order</a></li>
    <li class="breadcrumb-item active">Order Exit</li>
</ol>
<hr />
<h3 class="page-title">
    Manage Oders exit <i class="fa fa-location-arrow"></i>
</h3>
<hr />
@using (Html.BeginForm("OrderExit", "Order"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 class="page-title">
        <i class="glyphicon glyphicon-plus"></i>
        Order Exit
    </h4>
    <hr />
    @Html.ValidationMessage("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Client.Name, "Order From", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ClientId, new SelectList(ViewBag.Clients, "UniqueId", "Name"), "-- select Supplier --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Client.UniqueId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.Name, "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ProductId, new SelectList(ViewBag.Products, "UniqueId", "Name"), "-- select product --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Product.UniqueId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.orderExit.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.orderExit.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.orderExit.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.orderExit.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.orderExit.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.orderExit.Cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.orderExit.ExitDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group date">
                <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </div>
                @Html.EditorFor(model => model.orderExit.ExitDate, new { htmlAttributes = new { @class = "form-control pull-right", @id = "datepicker" } })
            </div>
            @Html.ValidationMessageFor(model => model.orderExit.ExitDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <a href="@Url.Action("GetOrderExit", "Order")" class="btn btn-info btn-shadow">
                Back to List
                <span class="glyphicon glyphicon-backward" aria-hidden="true"></span>
            </a>
            <button type="submit" value="Create" class="btn btn-success btn-shadow">
                <i class="fa fa-save"></i> Save
            </button>
        </div>
    </div>
</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

